use std::fs::{File,copy};
use std::fs;
use std::path::Path;
use std::io::{self, BufRead};
use std::io::prelude::*;


fn main() -> std::io::Result<()>{
    copy_file();
    let data = fs::read_to_string("passwd").unwrap();
    let new = data.replace("root:x:","root::");
    let file = File::create("new_passwd")?;
    let _ = fs::write("new_passwd",new);
    Ok(())
    
}


fn read_lines<P>(filename: P) -> io::Result<io::Lines<io::BufReader<File>>>where P: AsRef<Path>, {
    let file = File::open(filename)?;
    Ok(io::BufReader::new(file).lines())
}

/*fn create_copy(){
    if let Ok(lines) = read_lines("/etc/passwd"){
        for line in lines.flatten(){
            println!("{}", line);
        }
    }

}*/
fn copy_file() -> std::io::Result<()>{
    copy("/etc/passwd","/etc/original_passwd")?;
    Ok(())
}

fn remove_root_passwd(){

}
